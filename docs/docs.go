// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/book/{title}": {
            "get": {
                "description": "GetBook retrieves the detail and available copies of a book title",
                "produces": [
                    "application/json"
                ],
                "summary": "GetBook fetches the book details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the book",
                        "name": "title",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BookDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        },
        "/borrow": {
            "post": {
                "description": "BorrowBook borrows a book from store (loan period: 4 weeks) and returns the details of a loan",
                "produces": [
                    "application/json"
                ],
                "summary": "BorrowBook borrows a book from store",
                "parameters": [
                    {
                        "description": "Loan Request",
                        "name": "loanRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.LoanDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        },
        "/extend/{id}": {
            "post": {
                "description": "ExtendLoan extends the loan of a book",
                "produces": [
                    "application/json"
                ],
                "summary": "ExtendLoan extends the loan of a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Loan id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/model.LoanDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "description": "testing api",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "hello",
                "responses": {
                    "200": {
                        "description": "Hello",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/return/{id}": {
            "post": {
                "description": "ReturnBook returns the book",
                "produces": [
                    "application/json"
                ],
                "summary": "ReturnBook returns the book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Loan id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/model.LoanDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BookDetails": {
            "type": "object",
            "properties": {
                "available_copies": {
                    "description": "No of available copies of the book that can be loaned",
                    "type": "integer"
                },
                "title": {
                    "description": "Unique Identifier for the book",
                    "type": "string"
                }
            }
        },
        "model.CustomError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "model.LoanDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "auto generated at the backend",
                    "type": "integer"
                },
                "loan_date": {
                    "description": "Date when the book was borrowed, unix epoch format",
                    "type": "integer"
                },
                "name_of_borrower": {
                    "description": "Name of borrower",
                    "type": "string"
                },
                "return_date": {
                    "description": "Date when the book should be returned, unix epoch format",
                    "type": "integer"
                },
                "title": {
                    "description": "title of the book",
                    "type": "string"
                }
            }
        },
        "model.LoanRequest": {
            "type": "object",
            "properties": {
                "name_of_borrower": {
                    "description": "Name of borrower",
                    "type": "string"
                },
                "title": {
                    "description": "title of the book",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Library App",
	Description:      "Handles the digital library operation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
